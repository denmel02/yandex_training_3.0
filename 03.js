// Диего увлекается коллекционированием наклеек. На каждой из них написано число, и каждый коллекционер мечтает собрать наклейки со всеми встречающимися числами.

// Диего собрал N наклеек, некоторые из которых, возможно, совпадают. Как-то раз к нему пришли K коллекционеров. i-й из них собрал все наклейки с номерами не меньшими, чем pi. Напишите программу, которая поможет каждому из коллекционеров определить, сколько недостающих ему наклеек есть у Диего. Разумеется, гостей Диего не интересуют повторные экземпляры наклеек.

// Формат ввода
// В первой строке содержится единственное число N (0 ≤ N ≤ 100 000) — количество наклеек у Диего.

// В следующей строке содержатся N целых неотрицательных чисел (не обязательно различных) — номера наклеек Диего. Все номера наклеек не превосходят 10^9.

// В следующей строке содержится число K (0 ≤ K ≤ 100 000) — количество коллекционеров, пришедших к Диего. В следующей строке содержатся K целых чисел pi (0 ≤ pi ≤ 10^9), где pi — наименьший номер наклейки, не интересующий i-го коллекционера.

// Формат вывода
// Для каждого коллекционера в отдельной строке выведите количество различных чисел на наклейках, которые есть у Диего, но нет у этого коллекционера.

// Пример 1

// Ввод
// 1
// 5
// 2
// 4 6

// Вывод
// 0
// 1

// Пример 2

// Ввод
// 3
// 100 1 50
// 3
// 300 0 75

// Вывод
// 3
// 0
// 2

const fn = (myNumbers, peopleMaxNumbers) => {
    const numbers = myNumbers.slice().sort((a, b) => a - b);
    const maxNumbers = peopleMaxNumbers
        .map((value, index) => ({ index, value }))
        .sort((a, b) => a.value - b.value);
    const getCount = (array, maxValue, firstIndex = 0) => {
      for (let index = firstIndex; index < array.length; index++) {
        if (array[index] >= maxValue) {
          return index;
        }
      }

      return array.length;
    };

    let prevIndex = 0;
    let result = [];

    for (let maxNumber of maxNumbers) {
      const { index, value } = maxNumber;
      prevIndex = getCount(numbers, value, prevIndex);
      result[index] = prevIndex;
    }

    return result;
  };

  console.log(fn([5], [4, 6]));
  console.log(fn([100, 1, 50], [300, 0, 75]));